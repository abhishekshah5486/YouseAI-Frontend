{"ast":null,"code":"const {\n  axiosInstance\n} = require('./index');\n\n// Retrieve Task by TaskI\n// Create a new task\nexport const createTask = async value => {\n  try {\n    const response = await axiosInstance.post('/tasks', value);\n    return response.data;\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\n// Update a task by ID\nexport const updateTask = async value => {\n  try {\n    const response = await axiosInstance.patch('/tasks/:id', value);\n    return response.data;\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\n// Delete a task by ID\nexport const deleteTask = async () => {\n  try {\n    const response = await axiosInstance.delete('/tasks/:id');\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\n// Retrieve all tasks by status\nexport const retrieveTasksByStatus = async status => {\n  try {\n    const response = await axiosInstance.get(`/tasks/${status}`);\n    return response.data;\n  } catch (err) {\n    console.log(err.message);\n  }\n};","map":{"version":3,"names":["axiosInstance","require","createTask","value","response","post","data","err","console","log","message","updateTask","patch","deleteTask","delete","retrieveTasksByStatus","status","get"],"sources":["/Users/abhishekshah/crework-trello-clone/src/APICalls/tasks.js"],"sourcesContent":["const { axiosInstance } = require('./index');\n\n// Retrieve Task by TaskI\n// Create a new task\nexport const createTask = async (value) => {\n    try {\n        const response = await axiosInstance.post('/tasks', value);\n        return response.data;\n    } catch (err) {\n        console.log(err.message);\n    }\n}\n\n// Update a task by ID\nexport const updateTask = async (value) => {\n    try {\n        const response = await axiosInstance.patch('/tasks/:id', value);\n        return response.data;\n    } catch (err) {\n        console.log(err.message);\n    }   \n}\n\n// Delete a task by ID\nexport const deleteTask = async () => {\n    try {\n        const response = await axiosInstance.delete('/tasks/:id');\n    } catch (err) {\n        console.log(err.message);\n    }\n}\n\n// Retrieve all tasks by status\nexport const retrieveTasksByStatus = async (status) => {\n    try {\n        const response = await axiosInstance.get(`/tasks/${status}`);\n        return response.data;\n    } catch (err) {\n        console.log(err.message);\n    }\n}"],"mappings":"AAAA,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAE5C;AACA;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,QAAQ,EAAEF,KAAK,CAAC;IAC1D,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOR,KAAK,IAAK;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACY,KAAK,CAAC,YAAY,EAAET,KAAK,CAAC;IAC/D,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMJ,aAAa,CAACc,MAAM,CAAC,YAAY,CAAC;EAC7D,CAAC,CAAC,OAAOP,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,qBAAqB,GAAG,MAAOC,MAAM,IAAK;EACnD,IAAI;IACA,MAAMZ,QAAQ,GAAG,MAAMJ,aAAa,CAACiB,GAAG,CAAC,UAAUD,MAAM,EAAE,CAAC;IAC5D,OAAOZ,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}