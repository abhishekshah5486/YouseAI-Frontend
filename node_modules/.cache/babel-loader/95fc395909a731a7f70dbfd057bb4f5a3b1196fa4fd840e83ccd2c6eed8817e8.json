{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekshah/crework-trello-clone/src/Components/BasicDatePicker/BasicDatePicker.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BasicDatePicker() {\n  _s();\n  const [cleared, setCleared] = React.useState < boolean > false;\n  React.useEffect(() => {\n    if (cleared) {\n      const timeout = setTimeout(() => {\n        setCleared(false);\n      }, 1500);\n      return () => clearTimeout(timeout);\n    }\n    return () => {};\n  }, [cleared]);\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(DemoContainer, {\n      components: ['DatePicker'],\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Not Selected\",\n        slotProps: {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicDatePicker, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = BasicDatePicker;\nvar _c;\n$RefreshReg$(_c, \"BasicDatePicker\");","map":{"version":3,"names":["React","DemoContainer","AdapterDayjs","LocalizationProvider","DatePicker","jsxDEV","_jsxDEV","BasicDatePicker","_s","cleared","setCleared","useState","boolean","useEffect","timeout","setTimeout","clearTimeout","dateAdapter","children","components","label","slotProps","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhishekshah/crework-trello-clone/src/Components/BasicDatePicker/BasicDatePicker.jsx"],"sourcesContent":["import * as React from 'react';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\n\nexport default function BasicDatePicker() {\n    const [cleared, setCleared] = React.useState<boolean>(false);\n\n    React.useEffect(() => {\n        if (cleared) {\n        const timeout = setTimeout(() => {\n            setCleared(false);\n        }, 1500);\n\n        return () => clearTimeout(timeout);\n        }\n        return () => {};\n    }, [cleared]);\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DemoContainer components={['DatePicker']}>\n        <DatePicker \n        label=\"Not Selected\" \n        slotProps={{\n\n        }}\n        />\n      </DemoContainer>\n    </LocalizationProvider>\n  );\n}"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,oCAAoC;AAClE,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,oBAAoB,QAAQ,0CAA0C;AAC/E,SAASC,UAAU,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,KAAK,CAACW,QAAQ,GAACC,OAAO,GAAE,KAAM;EAE5DZ,KAAK,CAACa,SAAS,CAAC,MAAM;IAClB,IAAIJ,OAAO,EAAE;MACb,MAAMK,OAAO,GAAGC,UAAU,CAAC,MAAM;QAC7BL,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMM,YAAY,CAACF,OAAO,CAAC;IAClC;IACA,OAAO,MAAM,CAAC,CAAC;EACnB,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEf,oBACEH,OAAA,CAACH,oBAAoB;IAACc,WAAW,EAAEf,YAAa;IAAAgB,QAAA,eAC9CZ,OAAA,CAACL,aAAa;MAACkB,UAAU,EAAE,CAAC,YAAY,CAAE;MAAAD,QAAA,eACxCZ,OAAA,CAACF,UAAU;QACXgB,KAAK,EAAC,cAAc;QACpBC,SAAS,EAAE,CAEX;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAE3B;AAACjB,EAAA,CA1BuBD,eAAe;AAAAmB,EAAA,GAAfnB,eAAe;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}