{"ast":null,"code":"const {\n  axiosInstance\n} = require('./index');\n\n// Register New User\nexport const RegisterUser = async value => {\n  try {\n    const response = await axiosInstance.post('/signup', value);\n    return response.data;\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\n// Login a user\n_c = RegisterUser;\nexport const LoginUser = async value => {\n  try {\n    const response = await axiosInstance.post();\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n_c2 = LoginUser;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegisterUser\");\n$RefreshReg$(_c2, \"LoginUser\");","map":{"version":3,"names":["axiosInstance","require","RegisterUser","value","response","post","data","err","console","log","message","_c","LoginUser","_c2","$RefreshReg$"],"sources":["/Users/abhishekshah/crework-trello-clone/src/APICalls/users.js"],"sourcesContent":["const { axiosInstance } = require('./index');\n\n// Register New User\nexport const RegisterUser = async (value) => {\n    try {\n        const response = await axiosInstance.post('/signup', value);\n        return response.data;\n    } catch (err) {\n        console.log(err.message);\n    }\n}\n\n// Login a user\nexport const LoginUser = async (value) => {\n    try {\n        const response = await axiosInstance.post()\n    } catch (err) {\n        console.log(err.message);\n    }\n}"],"mappings":"AAAA,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAE5C;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;EACzC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,SAAS,EAAEF,KAAK,CAAC;IAC3D,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B;AACJ,CAAC;;AAED;AAAAC,EAAA,GATaT,YAAY;AAUzB,OAAO,MAAMU,SAAS,GAAG,MAAOT,KAAK,IAAK;EACtC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOE,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B;AACJ,CAAC;AAAAG,GAAA,GANYD,SAAS;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}