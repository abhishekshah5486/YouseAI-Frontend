{"ast":null,"code":"const {\n  axiosInstance\n} = require('./index');\n\n// Register New User\nexport const RegisterUser = async value => {\n  try {\n    const response = await axiosInstance.post('/users/signup', value);\n    return response.data;\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\n// Login a user\n_c = RegisterUser;\nexport const LoginUser = async value => {\n  try {\n    const response = await axiosInstance.post('/users/login', value);\n    return response.data;\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\n// Logout a user\n_c2 = LoginUser;\nexport const LogoutUser = async userId => {\n  try {\n    const response = await axiosInstance.post(`/users/logout/${userId}`);\n    return response.data;\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\n// Get current user\n_c3 = LogoutUser;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RegisterUser\");\n$RefreshReg$(_c2, \"LoginUser\");\n$RefreshReg$(_c3, \"LogoutUser\");","map":{"version":3,"names":["axiosInstance","require","RegisterUser","value","response","post","data","err","console","log","message","_c","LoginUser","_c2","LogoutUser","userId","_c3","$RefreshReg$"],"sources":["/Users/abhishekshah/crework-trello-clone/src/APICalls/users.js"],"sourcesContent":["const { axiosInstance } = require('./index');\n\n// Register New User\nexport const RegisterUser = async (value) => {\n    try {\n        const response = await axiosInstance.post('/users/signup', value);\n        return response.data;\n    } catch (err) {\n        console.log(err.message);\n    }\n}\n\n// Login a user\nexport const LoginUser = async (value) => {\n    try {\n        const response = await axiosInstance.post('/users/login', value);\n        return response.data;\n    } catch (err) {\n        console.log(err.message);\n    }\n}\n\n// Logout a user\nexport const LogoutUser = async (userId) => {\n    try {\n        const response = await axiosInstance.post(`/users/logout/${userId}`);\n        return response.data;\n    } catch (err) {\n        console.log(err.message);\n    }\n}\n\n// Get current user\n"],"mappings":"AAAA,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAE5C;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;EACzC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,eAAe,EAAEF,KAAK,CAAC;IACjE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B;AACJ,CAAC;;AAED;AAAAC,EAAA,GATaT,YAAY;AAUzB,OAAO,MAAMU,SAAS,GAAG,MAAOT,KAAK,IAAK;EACtC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,cAAc,EAAEF,KAAK,CAAC;IAChE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B;AACJ,CAAC;;AAED;AAAAG,GAAA,GATaD,SAAS;AAUtB,OAAO,MAAME,UAAU,GAAG,MAAOC,MAAM,IAAK;EACxC,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,iBAAiBU,MAAM,EAAE,CAAC;IACpE,OAAOX,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B;AACJ,CAAC;;AAED;AAAAM,GAAA,GATaF,UAAU;AAAA,IAAAH,EAAA,EAAAE,GAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}