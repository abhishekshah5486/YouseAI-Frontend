{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserContext from '../../Context/UserContext';\nfunction ProtectedRoute({\n  children\n}) {\n  _s();\n  const {\n    user\n  } = useContext(UserContext);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  console.log(user);\n  if (!user) {\n    // Navigate to the landing page if the user is not logged in\n    return navigate('/');\n  }\n  return children;\n}\n_s(ProtectedRoute, \"IC/tl+8CMPkCKIzphJMDZ/hzHZI=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","useNavigate","UserContext","ProtectedRoute","children","_s","user","loading","setLoading","useState","navigate","console","log","_c","$RefreshReg$"],"sources":["/Users/abhishekshah/crework-trello-clone/src/Components/ProtectedRoute/ProtectedRoute.jsx"],"sourcesContent":["import React, {useContext} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserContext from '../../Context/UserContext';\n\nfunction ProtectedRoute({children}) {\n    const { user } = useContext(UserContext);\n    const [loading, setLoading] = useState(true);\n    const navigate = useNavigate();\n\n    console.log(user);\n    if (!user)\n    {   \n        // Navigate to the landing page if the user is not logged in\n        return navigate('/');\n    }\n    return children;\n}\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,SAASC,cAAcA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAK,CAAC,GAAGN,UAAU,CAACE,WAAW,CAAC;EACxC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BU,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EACjB,IAAI,CAACA,IAAI,EACT;IACI;IACA,OAAOI,QAAQ,CAAC,GAAG,CAAC;EACxB;EACA,OAAON,QAAQ;AACnB;AAACC,EAAA,CAZQF,cAAc;EAAA,QAGFF,WAAW;AAAA;AAAAY,EAAA,GAHvBV,cAAc;AAcvB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}